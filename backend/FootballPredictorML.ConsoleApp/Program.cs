// This file was auto-generated by ML.NET Model Builder. 

using FootballPredictorML.Model;
using Microsoft.ML;
using System;
using System.Linq;

namespace FootballPredictorML.ConsoleApp
{
    class Program
    {
        //Dataset to use for predictions 
        private const string DATA_FILEPATH = @"C:\Users\dillan.cagnetta.EURO_NT\Desktop\FootBall_Results_2018_2019.csv";

        static void Main(string[] args)
        {
            // ModelBuilder.CreateModel();

            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = CreateSingleDataSample(DATA_FILEPATH);

            // Make a single prediction on the sample data and print results
            ModelOutput predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Winner with predicted Winner from sample data...\n\n");
            Console.WriteLine($"Id: {sampleData.Id}");
            Console.WriteLine($"MatchId: {sampleData.MatchId}");
            Console.WriteLine($"SeasonId: {sampleData.SeasonId}");
            Console.WriteLine($"Matchday: {sampleData.Matchday}");
            Console.WriteLine($"HomeTeam: {sampleData.HomeTeam}");
            Console.WriteLine($"HomeTeamId: {sampleData.HomeTeamId}");
            Console.WriteLine($"AwayTeam: {sampleData.AwayTeam}");
            Console.WriteLine($"AwayTeamId: {sampleData.AwayTeamId}");
            Console.WriteLine($"WinnerId: {sampleData.WinnerId}");
            Console.WriteLine($"HomeTeamGoals: {sampleData.HomeTeamGoals}");
            Console.WriteLine($"AwayTeamGoals: {sampleData.AwayTeamGoals}");
            Console.WriteLine($"\n\nActual Winner: {sampleData.Winner} " +
                              $"\nPredicted Winner value {predictionResult.Prediction} " +
                              $"\nPredicted Winner scores: [{String.Join(",", predictionResult.Score)}]\n\n");

            Console.WriteLine($"Home Win: {predictionResult.Score[0] * 100:#.##}%");
            Console.WriteLine($"Away Win: {predictionResult.Score[1] * 100:#.##}%");
            Console.WriteLine($"Draw: {predictionResult.Score[2] * 100:#.##}%");

            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }

        // Change this code to create your own sample data
        #region CreateSingleDataSample
        // Method to load single row of dataset to try a single prediction
        private static ModelInput CreateSingleDataSample(string dataFilePath)
        {
            // Create MLContext
            MLContext mlContext = new MLContext();

            // Load dataset
            IDataView dataView = mlContext.Data.LoadFromTextFile<ModelInput>(
                                            path: dataFilePath,
                                            hasHeader: true,
                                            separatorChar: ',',
                                            allowQuoting: true,
                                            allowSparse: false);

            // Use first line of dataset as model input
            // You can replace this with new test data (hardcoded or from end-user application)
            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false)
                                                                        .ToList()[1];
            return sampleForPrediction;
        }
        #endregion
    }
}
